Resources:
  accessLogs751B1465:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessTestStack/accessLogs/Resource
  ServerlessTestRestAPIF1F3AFC0:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: servelress-test-api
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Resource
  ServerlessTestRestAPIDeploymentA7493B7D7b67f3b1780312f78ecb4bb14b9acb84:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: ServerlessTestRestAPIF1F3AFC0
    DependsOn:
      - ServerlessTestRestAPImessagesOPTIONS3459E40D
      - ServerlessTestRestAPImessagesPOST9F86B1A5
      - ServerlessTestRestAPImessagesAA69E505
      - ServerlessTestRestAPIOPTIONS098C03CB
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Deployment/Resource
  ServerlessTestRestAPIDeploymentStageprodC05B6859:
    Type: AWS::ApiGateway::Stage
    Properties:
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
            - accessLogs751B1465
            - Arn
        Format: '{"requestTime":"$context.requestTime","requestId":"contextRequestId(){return"$context.requestId"}","httpMethod":"contextHttpMethod(){return"$context.httpMethod"}","path":"$context.path","resourcePath":"$context.resourcePath","status":$context.status,"responseLatency":$context.responseLatency}'
      DeploymentId:
        Ref: ServerlessTestRestAPIDeploymentA7493B7D7b67f3b1780312f78ecb4bb14b9acb84
      RestApiId:
        Ref: ServerlessTestRestAPIF1F3AFC0
      StageName: prod
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/DeploymentStage.prod/Resource
  ServerlessTestRestAPIOPTIONS098C03CB:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - ServerlessTestRestAPIF1F3AFC0
          - RootResourceId
      RestApiId:
        Ref: ServerlessTestRestAPIF1F3AFC0
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Default/OPTIONS/Resource
  ServerlessTestRestAPImessagesAA69E505:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ServerlessTestRestAPIF1F3AFC0
          - RootResourceId
      PathPart: messages
      RestApiId:
        Ref: ServerlessTestRestAPIF1F3AFC0
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Default/messages/Resource
  ServerlessTestRestAPImessagesOPTIONS3459E40D:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: ServerlessTestRestAPImessagesAA69E505
      RestApiId:
        Ref: ServerlessTestRestAPIF1F3AFC0
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Default/messages/OPTIONS/Resource
  ServerlessTestRestAPImessagesPOSTApiPermissionServerlessTestStackServerlessTestRestAPI9D13A088POSTmessages7C49D887:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - messagesConstrcutuploaderlambda7583B211
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ServerlessTestRestAPIF1F3AFC0
            - /
            - Ref: ServerlessTestRestAPIDeploymentStageprodC05B6859
            - /POST/messages
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Default/messages/POST/ApiPermission.ServerlessTestStackServerlessTestRestAPI9D13A088.POST..messages
  ServerlessTestRestAPImessagesPOSTApiPermissionTestServerlessTestStackServerlessTestRestAPI9D13A088POSTmessages9BB56E33:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - messagesConstrcutuploaderlambda7583B211
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ServerlessTestRestAPIF1F3AFC0
            - /test-invoke-stage/POST/messages
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Default/messages/POST/ApiPermission.Test.ServerlessTestStackServerlessTestRestAPI9D13A088.POST..messages
  ServerlessTestRestAPImessagesPOST9F86B1A5:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - messagesConstrcutuploaderlambda7583B211
                  - Arn
              - /invocations
      ResourceId:
        Ref: ServerlessTestRestAPImessagesAA69E505
      RestApiId:
        Ref: ServerlessTestRestAPIF1F3AFC0
    Metadata:
      aws:cdk:path: ServerlessTestStack/ServerlessTestRestAPI/Default/messages/POST/Resource
  messagesConstrcutmessagestable86C10C9F:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: messageId
          AttributeType: S
      KeySchema:
        - AttributeName: messageId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: database
          Value: serverlessTest
        - Key: stackName
          Value: serverlessTestStack
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessTestStack/messagesConstrcut/messages-table/Resource
  messagesConstrcutmessagesbucketFDA00CC2:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessTestStack/messagesConstrcut/messages-bucket/Resource
  messagesConstrcutuploaderlambdaServiceRole611DF44D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessTestStack/messagesConstrcut/uploader-lambda/ServiceRole/Resource
  messagesConstrcutuploaderlambdaServiceRoleDefaultPolicy0B85454F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - messagesConstrcutmessagestable86C10C9F
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - messagesConstrcutmessagesbucketFDA00CC2
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - messagesConstrcutmessagesbucketFDA00CC2
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: messagesConstrcutuploaderlambdaServiceRoleDefaultPolicy0B85454F
      Roles:
        - Ref: messagesConstrcutuploaderlambdaServiceRole611DF44D
    Metadata:
      aws:cdk:path: ServerlessTestStack/messagesConstrcut/uploader-lambda/ServiceRole/DefaultPolicy/Resource
  messagesConstrcutuploaderlambda7583B211:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a125d722fd74107558cbe500dd04a199ae1ad2410ffadf02465edc1be4d23e8f.zip
      Environment:
        Variables:
          MESSAGES_BUCKET_NAME:
            Ref: messagesConstrcutmessagesbucketFDA00CC2
          MESSAGES_TABLE_NAME:
            Ref: messagesConstrcutmessagestable86C10C9F
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: messages-post-lambda
      Handler: index.handler
      MemorySize: 256
      Role:
        Fn::GetAtt:
          - messagesConstrcutuploaderlambdaServiceRole611DF44D
          - Arn
      Runtime: nodejs18.x
      Timeout: 25
    DependsOn:
      - messagesConstrcutuploaderlambdaServiceRoleDefaultPolicy0B85454F
      - messagesConstrcutuploaderlambdaServiceRole611DF44D
    Metadata:
      aws:cdk:path: ServerlessTestStack/messagesConstrcut/uploader-lambda/Resource
      aws:asset:path: asset.a125d722fd74107558cbe500dd04a199ae1ad2410ffadf02465edc1be4d23e8f
      aws:asset:is-bundled: true
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02Qy07DMBBFv6V7d2hAQmzbItjwqAr7yLGnwXnYUcamiqL8Ox4nEV3d45nx9VzfQ5btINvIK22VrreNKWD88lLVIpbysXElwfjmytfehU4cL3blScjOlNLjVQ4wnpH8vjM8sOIzdo0bWrSeqzenaF8i12aI8y70Cg+SULyj/3Gamwut3cU58SQa2RZawhiLJ+xbQ2Sc5ZGXYJWPPAk9WNk6HeN8y6JJ9xNMgh5gPARVY1psoVl4h9U9t05jRfCRZDUWRrYxrpsdk55cY9TAx5n4hVwSoSfYs0zc+wy+C/4/T+rwDxhb3oZjPjqrzRyDl4CK7n6zJ8geYbepyJhtH6w3LcJ51j+tojFaxgEAAA==
    Metadata:
      aws:cdk:path: ServerlessTestStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ServerlessTestRestAPIEndpointF161DA89:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ServerlessTestRestAPIF1F3AFC0
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ServerlessTestRestAPIDeploymentStageprodC05B6859
          - /
  messagesConstrcutS3BucketURL38BFBC37:
    Value:
      Fn::Join:
        - ""
        - - https://s3.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: messagesConstrcutmessagesbucketFDA00CC2
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

